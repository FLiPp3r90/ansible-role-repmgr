---


- name: Bootstrap | Create temporary directory to host pubkeys
  ansible.builtin.tempfile:
    state: directory
    suffix: pubkeys
  register: pubkeys_folder
  delegate_to: localhost
  become: false
  run_once: true

- name: Bootstrap | Create temporary file to assemble pubkeys
  ansible.builtin.tempfile:
    state: file
    suffix: authorized_keys
  register: authorized_keys_file
  delegate_to: localhost
  become: false
  run_once: true

- name: Bootstrap | ensure ssh directory
  file:
    path: "{{ postgres_ssh_dir }}"
    state: directory
    owner: "{{ postgres_user }}"
    group: "{{ postgres_group }}"
    mode: 0700
  become: true
  become_user: "{{ repmgr_postgres_admin_user }}"

- name: Bootstrap | create ssh rsa key for postgres user
  openssh_keypair:
    path: "{{ postgres_ssh_rsa_key }}"
    mode: 0700
    owner: "{{ postgres_user }}"
    group: "{{ postgres_group }}"
    comment: "{{ ansible_hostname }}"
  become: true
  become_user: "{{ repmgr_postgres_admin_user }}"

- name: Bootstrap | fetch ssh public keys from nodes
  fetch:
    dest: "{{ pubkeys_folder.path }}/{{ ansible_hostname }}_postgres_id_rsa_key.pub"
    src: "{{ postgres_ssh_rsa_key }}.pub"
    flat: true

- name: Bootstrap | merge public keys
  assemble:
    src: "{{ pubkeys_folder.path }}"
    dest: "{{ authorized_keys_file.path }}"
    mode: 0700
  delegate_to: localhost
  run_once: true

- name: Bootstrap | copy authorized key to host
  copy:
    src: "{{ authorized_keys_file.path }}"
    dest: "{{ postgres_ssh_dir }}/authorized_keys"
    owner: "{{ postgres_user }}"
    group: "{{ postgres_group }}"
    mode: 0700

- name: Bootstrap | set .ssh directory privileges
  file:
    path: "{{ postgres_ssh_dir }}"
    owner: "{{ postgres_user }}"
    group: "{{ postgres_group }}"
    mode: 0700
    recurse: true
    state: directory

- name: Bootstrap | delete temporary files & folder
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ pubkeys_folder.path }}"
    - "{{ authorized_keys_file.path }}"
  delegate_to: localhost
  become: false
  run_once: true

- name: Bootstrap | accept new host key
  ansible.builtin.command: ssh -o StrictHostKeyChecking=accept-new {{ item }} /bin/true
  with_items: "{{ ansible_play_hosts_all }}"
  become: true
  become_user: "{{ repmgr_postgres_admin_user }}"
